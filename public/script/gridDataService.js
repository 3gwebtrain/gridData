"use strict";

angular.module("gridDataApp.services", [])
.service('apiService', ['$rootScope', "jsonMaker",  "$q",  function( $rootScope, jsonMaker, $q  ){

	this.generateData = function( size ) {

		var newData = [];

		var size = size || 10;
		var baseSize = 0;

		while( baseSize < size ) {
			baseSize++;
			newData.push( {
				"mk0" : jsonMaker.createDigit( 3 ),
				"controlNumber0": jsonMaker.createDigit( 3 ),
				"control0": jsonMaker.createPrefixedDigit( ),
				"prefix0":jsonMaker.createAlphaNumaric( ),
				"base0": jsonMaker.createAlphaValue( 3 ),
				"suffix0":jsonMaker.createAlphaSuffix( 5 ),
				"sp0":jsonMaker.createDigit(  2 ),
				"trimin0":jsonMaker.createDigit( 6 ),
				"offline0":jsonMaker.createDigit( 6 ),
				"engine0":jsonMaker.createAlphaSuffix( 5 ),
				"zip0":jsonMaker.createDigit( 6 ),
				"station0":  jsonMaker.createAlphaValue( 3 ),
				"mk1": jsonMaker.createDigit( 3 ),
				"controlNumber1": jsonMaker.createDigit( 3 ),
				"control1": jsonMaker.createPrefixedDigit( ),
				"prefix1":jsonMaker.createAlphaNumaric( ),
				"base1": jsonMaker.createAlphaValue( 3 ),
				"suffix1":jsonMaker.createAlphaSuffix( 5 ),
				"sp1":jsonMaker.createDigit(  2 ),
				"trimin1":jsonMaker.createDigit( 6 ),
				"offline1":jsonMaker.createDigit( 6 ),
				"engine1":jsonMaker.createAlphaSuffix( 5 ),
				"zip1":jsonMaker.createDigit( 6 ),
				"station1": jsonMaker.createAlphaValue( 3 ),
				"mk2": jsonMaker.createDigit( 3 ),
				"controlNumber2": jsonMaker.createDigit( 3 ),
				"control2": jsonMaker.createPrefixedDigit( ),
				"prefix2":jsonMaker.createAlphaNumaric( ),
				"base2": jsonMaker.createAlphaValue( 3 ),
				"suffix2":jsonMaker.createAlphaSuffix( 5 ),
				"sp2":jsonMaker.createDigit(  2 ),
				"trimin2":jsonMaker.createDigit( 6 ),
				"offline2":jsonMaker.createDigit( 6 ),
				"engine2":jsonMaker.createAlphaSuffix( 5 ),
				"zip2":jsonMaker.createDigit( 6 ),
				"station2": jsonMaker.createAlphaValue( 3 ),
				"mk3": jsonMaker.createDigit( 3 ),
				"controlNumber3": jsonMaker.createDigit( 3 ),
				"control3": jsonMaker.createPrefixedDigit( ),
				"prefix3":jsonMaker.createAlphaNumaric( ),
				"base3": jsonMaker.createAlphaValue( 3 ),
				"suffix3":jsonMaker.createAlphaSuffix( 5 ),
				"sp3":jsonMaker.createDigit(  2 ),
				"trimin3":jsonMaker.createDigit( 6 ),
				"offline3":jsonMaker.createDigit( 6 ),
				"engine3":jsonMaker.createAlphaSuffix( 5 ),
				"zip3":jsonMaker.createDigit( 6 ),
				"station3": jsonMaker.createAlphaValue( 3 ),
				"mk4": jsonMaker.createDigit( 3 ),
				"controlNumber4": jsonMaker.createDigit( 3 ),
				"control4": jsonMaker.createPrefixedDigit( ),
				"prefix4":jsonMaker.createAlphaNumaric( ),
				"base4": jsonMaker.createAlphaValue( 3 ),
				"suffix4":jsonMaker.createAlphaSuffix( 5 ),
				"sp4":jsonMaker.createDigit(  2 ),
				"trimin4":jsonMaker.createDigit( 6 ),
				"offline4":jsonMaker.createDigit( 6 ),
				"engine4":jsonMaker.createAlphaSuffix( 5 ),
				"zip4":jsonMaker.createDigit( 6 ),
				"station4": jsonMaker.createAlphaValue( 3 ),
				"mk5": jsonMaker.createDigit( 3 ),
				"controlNumber5": jsonMaker.createDigit( 3 ),
				"control5": jsonMaker.createPrefixedDigit( ),
				"prefix5":jsonMaker.createAlphaNumaric( ),
				"base5": jsonMaker.createAlphaValue( 3 ),
				"suffix5":jsonMaker.createAlphaSuffix( 5 ),
				"sp5":jsonMaker.createDigit(  2 ),
				"trimin5":jsonMaker.createDigit( 6 ),
				"offline5":jsonMaker.createDigit( 6 ),
				"engine5":jsonMaker.createAlphaSuffix( 5 ),
				"zip5":jsonMaker.createDigit( 6 ),
				"station5": jsonMaker.createAlphaValue( 3 ),
				"mk6": jsonMaker.createDigit( 3 ),
				"controlNumber6": jsonMaker.createDigit( 3 ),
				"control6": jsonMaker.createPrefixedDigit( ),
				"prefix6":jsonMaker.createAlphaNumaric( ),
				"base6": jsonMaker.createAlphaValue( 3 ),
				"suffix6":jsonMaker.createAlphaSuffix( 5 ),
				"sp6":jsonMaker.createDigit(  2 ),
				"trimin6":jsonMaker.createDigit( 6 ),
				"offline6":jsonMaker.createDigit( 6 ),
				"engine6":jsonMaker.createAlphaSuffix( 5 ),
				"zip6":jsonMaker.createDigit( 6 ),
				"station6": jsonMaker.createAlphaValue( 3 ),
				"mk7": jsonMaker.createDigit( 3 ),
				"controlNumber7": jsonMaker.createDigit( 3 ),
				"control7": jsonMaker.createPrefixedDigit( ),
				"prefix7":jsonMaker.createAlphaNumaric( ),
				"base7": jsonMaker.createAlphaValue( 3 ),
				"suffix7":jsonMaker.createAlphaSuffix( 5 ),
				"sp7":jsonMaker.createDigit(  2 ),
				"trimin7":jsonMaker.createDigit( 6 ),
				"offline7":jsonMaker.createDigit( 6 ),
				"engine7":jsonMaker.createAlphaSuffix( 5 ),
				"zip7":jsonMaker.createDigit( 6 ),
				"station7": jsonMaker.createAlphaValue( 3 ),
				"mk8": jsonMaker.createDigit( 3 ),
				"controlNumber8": jsonMaker.createDigit( 3 ),
				"control8": jsonMaker.createPrefixedDigit( ),
				"prefix8":jsonMaker.createAlphaNumaric( ),
				"base8": jsonMaker.createAlphaValue( 3 ),
				"suffix8":jsonMaker.createAlphaSuffix( 5 ),
				"sp8":jsonMaker.createDigit(  2 ),
				"trimin8":jsonMaker.createDigit( 6 ),
				"offline8":jsonMaker.createDigit( 6 ),
				"engine8":jsonMaker.createAlphaSuffix( 5 ),
				"zip8":jsonMaker.createDigit( 6 ),
				"station8": jsonMaker.createAlphaValue( 3 ),
				"mk9": jsonMaker.createDigit( 3 ),
				"controlNumber9": jsonMaker.createDigit( 3 ),
				"control9": jsonMaker.createPrefixedDigit( ),
				"prefix9":jsonMaker.createAlphaNumaric( ),
				"base9": jsonMaker.createAlphaValue( 3 ),
				"suffix9":jsonMaker.createAlphaSuffix( 5 ),
				"sp9":jsonMaker.createDigit(  2 ),
				"trimin9":jsonMaker.createDigit( 6 ),
				"offline9":jsonMaker.createDigit( 6 ),
				"engine9":jsonMaker.createAlphaSuffix( 5 ),
				"zip9":jsonMaker.createDigit( 6 ),
				"station9": jsonMaker.createAlphaValue( 3 )
			} );
}		
			return $q.all( newData );
}

}]);